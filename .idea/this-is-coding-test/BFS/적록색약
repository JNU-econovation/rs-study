from collections import deque
N=int(input())

graph = [list(map(str, input())) for i in range(N)]
queue=deque([])
visited=[]

dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]
 
result = 0

for i in range(N):
    for j in range(N):
        if visited[i,j] == False:
            queue.append([i, j])

def bfs(graph, x,y, visited):
    visited[x,y]=True
    while queue:
        x,y=queue.popleft()
        for i in range(4):
            nx,ny=dx[i] + x, dy[i] + y
            if 0 < nx <= N and 0 < ny <= N and graph[nx][ny] == graph[x][y]:
                if not (visited[nx][ny]):
                    queue.append((nx, ny))
                    visited[nx][ny]=True

bfs(graph, 1, 1, visited)
